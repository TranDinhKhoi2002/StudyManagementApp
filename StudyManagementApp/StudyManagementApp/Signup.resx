<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picbxLogo.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picbxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKkAAACqCAYAAADWQW+BAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABblJREFUeF7t3c+LHEUchnH/Iy9CPAjmEogHwRxCyCEEPIggiCCIB0EhoJcQchG9
        iJ5CclJP6l838mbY3Z7Z6p7q7qpvv1X9HD6Xne2umZqHZbZ/1Lzz7nt3DoAzIoU9IoU9IoU9IoU9IoW9
        k0g/+viTw59//Q1sSh0Ou7wV6T///gds6sHDR0QKb0QKe0QKe0QKe0QKe0QKe0QKe0QKe0QKe+pw2CWR
        wg6Rwt5kpPoskNoIiESksEeksEeksEeksEeksEeksEeksEeksEeksEeksEeksEeksHf33n0ihTcihT0i
        hb3JSB8/eZrcCIhEpLBHpLCmpR93Femnn31+7Ysvvzp8/c23J777/ofDsx9/uvb8xcu3fv7l12u//f7H
        W6n9oywFqgaHTUrXkQ5f21qawNQYKGMsUCHSTERaz1Sg0nWk73/w4cmLXYNI67gUqBBpJiItLydQIdJM
        RFpWbqBCpJmItJw5gQqRZiLSMuYGKl1Hen5QeI1Xr98kx0C+JYEKkWYi0nWWBipEmolIl1sTqBBpJiJd
        Zm2g0nWk5/fKrEGk85UIVE4i1YUYqcFaVTJSLjKZp1SgQqSZiDRfyUCFSDMRaZ7SgQqRZiLSy2oEKl1H
        qhsLh69vDSKdVitQ6TZSXWlf8rQokY6rGah0GWnpQIVI02oHKt1FWiNQ0f1OqfH2LCJQ6SrSWoEKkZ6K
        ClS6ibRmoEKkNyIDlS4irR2oEOlRdKDSfKQRgQr/OB0DVSOp+amp6UijAtU4qfH3JCpQvZ/nJ2GajZRA
        40QGqvnWyjLDnzcZKYHGiQ5UYzYfKYHG2SJQaTpSAo2zVaAyGalWnhv+shM98YhANU5q/D3ZMlBpMtKo
        QLUcZGr8Pdk6UGkuUgKN4xCoNBUpgcZxCVSaiZRAY7kEKk1ESqCxnAIV+0gJNJZboGIdKYHGcgxUbCMl
        0FiugYplpAQayzlQ0fs03NfmkRJoLPdAxSrSqEC3/qztooVAxSZSAo3VSqBiESmBxmopUNk8UgKN1Vqg
        smmkBBpL85Can5JKByqbRUqgsc7f6BpqBCqTkerB1EZrEWislgOV8EgJNFbrgUpopAQaq4dAJSxSAo3V
        S6ASEimBxuopUKkeKYHG6i1QqRopgcbqMVCpFimBxuo1UKkSKYHG6jlQKR4pgcbSfKfmp6QtAxW918Pn
        sypSAo0VFejzFy+T40cpFimBxtpLoFIkUgKNtadAZXWkBBprb4HKqkgJNNYeA5XFkRJorL0GKosiJdBY
        ew5UJiPV5JxvEDFhoiem5QfPx9+bvQcqsyIl0FgEepQdKYHGItAbWZESaCwCPXUxUgKNRaC3TUZ6/p2O
        tRDoEYGmTUYagUCP9NXkqfkpqcVAZdNICfRG7UhbDVQ2i5RAT+n781PzVELLgcr5+lUhkRLobbUibT1Q
        CY9UAxLobTUi7SFQCY2UQMeVjrSXQCUsUgKdVjLSngKVkEgJ9LKSker4dmqMVlWPlEDzvHr9Jjl/SxDp
        DASaj0jHVYuUQOch0nFVIiXQ+UpGevfe/eQYrSoeKYEuQ6TjikZKoMsR6bhikRLoOkQ6rkikDx4+ItCV
        NH+puV1CB/NTY7RqdaQEWgaRjlsVKYGWQ6TjFkdKoGUR6bjHT56evL6sSAm0PCIdNztSAq2jZKSSGqNV
        syIl0HqIdFx2pARaX2rel0rtv1VZkRJojNTcL5Xaf6suRkqgcXTWSXQBtOg2Z9FV9lf0LSBytbqMlue8
        ohscRYdsUvtv1WSk+i+RQLG1yUh7OweMNhEp7BEp7BEp7BEp7BEp7BEp7BEp7BEp7BEp7OnU/LBLIoWd
        yUh7W64FbSJS2CNS2CNS2CNS2CNS2CNS2CNS2CNS2CNS2CNS2CNS2CNS2CNS2CNS2JuMVA+mNgIi6Y/l
        sEsihR0ihT0ihb3JSPWgln4EtjQZKeCISGGPSGGPSGGPSGHuzuF/8CRRd1rYaQAAAAAASUVORK5CYII=
</value>
  </data>
</root>